// <auto-generated />
using System;
using GarageManagement.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GarageManagement.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250825124853_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GarageManagement.Server.Model.BookAppointment", b =>
                {
                    b.Property<string>("search")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WorkshopId")
                        .HasColumnType("int");

                    b.Property<string>("bay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("emailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serviceAdvisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("settings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("search");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkshopId");

                    b.ToTable("bookAppointments");
                });

            modelBuilder.Entity("GarageManagement.Server.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetTokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Role")
                        .IsUnique()
                        .HasFilter("[Role] = 'Admin'");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GarageManagement.Server.Model.WorkshopProfile", b =>
                {
                    b.Property<int>("WorkshopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkshopId"));

                    b.Property<DateTime>("CalendarDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Landline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerMobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkshopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkshopId");

                    b.ToTable("WorkshopProfiles");
                });

            modelBuilder.Entity("GarageManagement.Server.Model.BookAppointment", b =>
                {
                    b.HasOne("GarageManagement.Server.Model.User", "User")
                        .WithMany("BookAppointments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagement.Server.Model.WorkshopProfile", "WorkshopProfile")
                        .WithMany("BookAppointments")
                        .HasForeignKey("WorkshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkshopProfile");
                });

            modelBuilder.Entity("GarageManagement.Server.Model.User", b =>
                {
                    b.Navigation("BookAppointments");
                });

            modelBuilder.Entity("GarageManagement.Server.Model.WorkshopProfile", b =>
                {
                    b.Navigation("BookAppointments");
                });
#pragma warning restore 612, 618
        }
    }
}
